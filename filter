import time
import pandas as pd
import numpy as np

CITY_DATA = { 'chicago': 'chicago.csv',
              'newyork': 'new_york_city.csv',
              'washington': 'washington.csv' }
def get_filters():
    """
    Asks user to specify a city, month, and day to analyze.

    Returns:
        (str) city - name of the city to analyze
        (str) month - name of the month to filter by, or "all" to apply no month filter
        (str) day - name of the day of week to filter by, or "all" to apply no day filter
    """
    months = ['january','february','march','april','may','june']
    days = ['mon','tue','wed','thu','fri','sat','sun']
    month ,day = None, None
    print('Hello! Let\'s explore some US bikeshare data!')
    while True :
        try:
            city = input("Please enter the name of city you'd like to see its (chicago, newyork, washington) : ").lower()
            if city not in CITY_DATA:
                print("Please make sure that you type the city right!!")
            else:
                break
        except ValueError:
            print("Invalid input")
        except KeyboardInterrupt:
            print("There is no INPUT taken")
    while True :
        try:
            if month != None and day != None:
                break
            choose = input("Would u like to filter a data by month, day, or not at all : ").lower()
            if choose == 'month':
                while True:
                    try:
                        month = input("Enter a month from (january, february, ... , june) of type all :").lower()
                        if month not in months and month != 'all':
                            print("Please type month name right or type all.")
                        else:
                            day = 'all'
                            break
                    except ValueError:
                        print("Invalid input")
                    except KeyboardInterrupt:
                        print("There is no INPUT taken")
            elif choose == 'day':
                while True:
                    try:
                        day = input("choose the day u'd like to see its data (mon,tue,wed,thu,fri,sat,sun) or type all:").lower()
                        if day not in days and day != 'all':
                            print("Please type day name right or type all.")
                        else:
                            month = 'all'
                            break
                    except ValueError:
                        print("Invalid input")
                    except KeyboardInterrupt:
                        print("There is no INPUT taken")
            elif choose == 'all':
                month, day = 'all', 'all'
                break
            else:
                print('Please enter month, day, or all')
        except ValueError:
            print("Invalid input")
        except KeyboardInterrupt:
            print("There is no INPUT taken")

    print('-'*40)
    return city, month, day


def load_data(city, month, day):
    """
    Loads data for the specified city and filters by month and day if applicable.

    Args:
        (str) city - name of the city to analyze
        (str) month - name of the month to filter by, or "all" to apply no month filter
        (str) day - name of the day of week to filter by, or "all" to apply no day filter
    Returns:
        df - Pandas DataFrame containing city data filtered by month and day
    """


    return df


def time_stats(df):
    """Displays statistics on the most frequent times of travel."""

    print('\nCalculating The Most Frequent Times of Travel...\n')
    start_time = time.time()

    # TO DO: display the most common month


    # TO DO: display the most common day of week


    # TO DO: display the most common start hour


    print("\nThis took %s seconds." % (time.time() - start_time))
    print('-'*40)


def station_stats(df):
    """Displays statistics on the most popular stations and trip."""

    print('\nCalculating The Most Popular Stations and Trip...\n')
    start_time = time.time()

    # TO DO: display most commonly used start station


    # TO DO: display most commonly used end station


    # TO DO: display most frequent combination of start station and end station trip


    print("\nThis took %s seconds." % (time.time() - start_time))
    print('-'*40)


def trip_duration_stats(df):
    """Displays statistics on the total and average trip duration."""

    print('\nCalculating Trip Duration...\n')
    start_time = time.time()

    # TO DO: display total travel time


    # TO DO: display mean travel time


    print("\nThis took %s seconds." % (time.time() - start_time))
    print('-'*40)


def user_stats(df):
    """Displays statistics on bikeshare users."""

    print('\nCalculating User Stats...\n')
    start_time = time.time()

    # TO DO: Display counts of user types


    # TO DO: Display counts of gender


    # TO DO: Display earliest, most recent, and most common year of birth


    print("\nThis took %s seconds." % (time.time() - start_time))
    print('-'*40)


def main():
    while True:
        city, month, day = get_filters()
        df = load_data(city, month, day)

        time_stats(df)
        station_stats(df)
        trip_duration_stats(df)
        user_stats(df)

        restart = input('\nWould you like to restart? Enter yes or no.\n')
        if restart.lower() != 'yes':
            break


if __name__ == "__main__":
	main()
